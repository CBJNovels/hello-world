name: Nightly Build

on:
  schedule:
    - cron: '0 16 * * *'  # 每天UTC时间00:00触发
  workflow_dispatch:

permissions:
  contents: write  # 必须的写入权限

jobs:
  build-and-publish:
    runs-on: ubuntu-latest  # 统一构建环境

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup build env
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc mingw-w64

    - name: Cross-platform build
      run: |
        make

    - name: Create git tag
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        CURRENT_DATE=$(TZ='Asia/Shanghai' date -u +'%Y-%m-%d')
        TAG_NAME="nightly-$CURRENT_DATE"
        echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
        COMMIT_SHA=$(git rev-parse HEAD)
        gh api repos/${{ github.repository }}/git/refs \
          -f ref="refs/tags/$TAG_NAME" \
          -f sha="$COMMIT_SHA"

    - name: Get current date
      run: echo "date_human=$(TZ='Asia/Shanghai' date -u +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
  
    - name: Publish release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG_NAME }}
        name: "Nightly Build (${{ env.TAG_NAME }})"
        body: |
          ### 每日构建版本
          - 构建时间: ${{ env.date_human }}
          - 包含以下文件:
            - hello-world (Linux)
            - hello-world.exe (Windows)
        draft: false
        prerelease: true
        files: |
          hello-world
          hello-world.exe
        fail_on_unmatched_files: true

  clean:
    needs: build-and-publish
    runs-on: ubuntu-latest
    steps:
    - name: Cleanup old nightly releases
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        gh release list | grep nightly | tail -n +31 | awk '{print $1}' | xargs -I {} gh release delete {} --yes