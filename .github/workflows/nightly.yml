name: Nightly Build

on:
  schedule:
    - cron: '0 16 * * *'  # 每天UTC时间00:00触发
  workflow_dispatch:

permissions:
  contents: write  # 必须的写入权限

jobs:
  build-and-publish:
    runs-on: ubuntu-latest  # 统一构建环境

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup build env
      run: |
        mkdir -p bin
        sudo apt-get update
        sudo apt-get install -y gcc mingw-w64 cppcheck

    - name: Cross-platform build
      run: |
        # Linux构建
        gcc src/main.c -o bin/hello-world
        # Windows交叉编译
        x86_64-w64-mingw32-gcc src/main.c -o bin/hello-world.exe
        # 验证构建产物
        file bin/hello-world*
        ls -lh bin/

    - name: Static analysis
      run: |
        mkdir -p reports
        cppcheck --enable=all --xml-version=2 src/ 2> reports/cppcheck-report.xml

    - name: Create git tag
      id: tag
      run: |
        CURRENT_DATE=$(date -u +'%Y-%m-%d')  # 使用标准日期格式
        TAG_NAME="nightly-$CURRENT_DATE"
        echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git tag -a $TAG_NAME -m "Nightly build $CURRENT_DATE"
        git push origin $TAG_NAME

    - name: Get current date
      id: time
      run: echo "date_human=$(date -u +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
  
    - name: Publish release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.TAG_NAME }}
        name: "Nightly Build (${{ steps.tag.outputs.TAG_NAME }})"
        body: |
          ### 每日构建版本
          - 构建时间: ${{ env.date_human }}
          - 包含以下文件:
            - hello-world (Linux)
            - hello-world.exe (Windows)
        draft: false
        prerelease: true
        files: |
          bin/hello-world
          bin/hello-world.exe
        fail_on_unmatched_files: true
